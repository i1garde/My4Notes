@using Microsoft.AspNetCore.Antiforgery
@using My4Notes.Web.Components.CustomComponents
@using My4Notes.Web.Components.Services
@inherits LayoutComponentBase

@inject IAntiforgery antiforgery
@inject IHttpContextAccessor HttpContextAccessor
@inject SearchService searchService
@inject NotesService notesService

<div class="main d-flex flex-column h-100">
  <div class="sticky-top">
      <header>
          <nav class="navbar navbar-expand-lg bg-body-tertiary">
              <div class="container-fluid">
                  <button id="createNoteButton"
                          type="button"
                          class="btn btn-dark"
                          data-bs-toggle="modal"
                          data-bs-target="#newNoteModal">
                      New note
                  </button>
                  <SearchBar Token=@Token/>
                  <div id="totalNotesCounter">Total notes: @Count</div>
              </div>
          </nav>
      </header>
  </div>

  <div class="content">
      @Body
  </div>
  
  <div class="modal fade" id="newNoteModal" tabindex="-1" aria-labelledby="newNoteModalLabel" aria-hidden="true">
      <CreateNoteModal Token=@Token />
  </div>

  <div style="padding-bottom:70px;"></div>
  <div class="fixed-bottom">
      <footer class="footer mt-auto py-3 bg-light">
          <div class="container">
              <div class="row align-items-center justify-content-between">
                  <div id="noteItemTitle" class="col-4 text-start">
                      <a class="text-muted" href="https://github.com/i1garde/My4Notes">Github</a>
                  </div>
                  <div class="col-4 text-center">
                      <div class="text-muted">My4Notes: anonymous notes sharing</div>
                  </div>
                  <div class="col-4 text-end">
                      <div class="text-muted">Author: Ivan Komarenko</div>
                  </div>
              </div>
          </div>
      </footer>
  </div>
</div>

@code {
    private AntiforgeryTokenSet Token { get; set; }
    private CreateNoteModal CreateNoteModal { get; set; }
    private int Count;
    
    protected override async Task OnInitializedAsync()
    {
        var token = antiforgery.GetAndStoreTokens(HttpContextAccessor.HttpContext);
        Token = token;
        Count = await notesService.GetNotesCount();
        notesService.OnNotesListChange += UpdateNotesList;
    }
    
    private async Task UpdateNotesList()
    {
        var notesCount = await notesService.GetNotesCount();
        Count = notesCount;
        StateHasChanged();
    }
}